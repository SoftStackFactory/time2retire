{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACa;AACN;AAEZ;AAcpC;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAZ3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;gBACnC,4EAAe,CAAC,QAAQ,EAAE;aAC3B;YACD,OAAO,EAAE;gBACP,yDAAS;aACV;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;AClBc;AACa;AACQ;AAExB;AACR;AAO/B;IAmBE,mBAAmB,OAAsB,EAChC,IAAU,EACV,SAA0B,EAC1B,gBAAkC;QAH3C,iBAQC;QARkB,YAAO,GAAP,OAAO,CAAe;QAChC,SAAI,GAAJ,IAAI,CAAM;QACV,cAAS,GAAT,SAAS,CAAiB;QAC1B,qBAAgB,GAAhB,gBAAgB,CAAkB;QArB3C,yCAAyC;QACzC,iEAAiE;QACjE,6BAA6B;QAC7B,mDAAmD;QACnD,+BAA+B;QAC/B,qBAAqB;QACrB,KAAK;QAEL,cAAS,GAAQ;YACf,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb;QAED,kBAAa,GAAY,KAAK,CAAC;QAU7B,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,UAAC,KAAK;YACvD,KAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC;IACJ,CAAC;IAED,+CAA+C;IAC/C,cAAc;IACd,wDAAwD;IACxD,mCAAmC;IACnC,kBAAkB;IAClB,mCAAmC;IACnC,0BAA0B;IAC1B,0CAA0C;IAC1C,wCAAwC;IACxC,wBAAwB;IACxB,wBAAwB;IACxB,UAAU;IACV,uBAAuB;IACvB,QAAQ;IACR,IAAI;IAEJ,6BAAS,GAAT;QAAA,iBAmBC;QAlBC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CACpD,iBAAO;YACL,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,kBAAkB,CAAC;YACxC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,mDAAQ,CAAC,CAAC;QAC9B,CAAC,EAAE,UAAC,GAAG;YACL,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAE1B,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC;gBAChC,OAAO,EAAE,2BAA2B;gBACpC,QAAQ,EAAE,IAAI;gBACd,QAAQ,EAAE,KAAK;aAChB,CAAC,CAAC;YACH,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;YAC1B,KAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC/B,CAAC,CACF;IACH,CAAC;IAhEU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;qEAoByC;YAC1B,sEAAI;YACC,6EAAe;YACR,MAAgB;OAtBhC,SAAS,CAkErB;IAAD,CAAC;AAAA;SAlEY,SAAS,e","file":"7.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\n\r\nimport { LoginPage } from './login';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(LoginPage),\r\n    TranslateModule.forChild()\r\n  ],\r\n  exports: [\r\n    LoginPage\r\n  ]\r\n})\r\nexport class LoginPageModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\r\n\r\nimport { User } from '../../providers';\r\nimport { MainPage } from '../';\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-login',\r\n  templateUrl: 'login.html'\r\n})\r\nexport class LoginPage {\r\n  // The account fields for the login form.\r\n  // If you're using the username field with or without email, make\r\n  // sure to add it to the type\r\n  // account: { email: string, password: string } = {\r\n  //   email: 'test@example.com',\r\n  //   password: 'test'\r\n  // };\r\n\r\n  userLogin: any = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  submitAttempt: boolean = false;\r\n\r\n  // Our translated text strings\r\n  private loginErrorString: string;\r\n\r\n  constructor(public navCtrl: NavController,\r\n    public user: User,\r\n    public toastCtrl: ToastController,\r\n    public translateService: TranslateService) {\r\n\r\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\r\n      this.loginErrorString = value;\r\n    })\r\n  }\r\n\r\n  // Attempt to login in through our User service\r\n  // doLogin() {\r\n  //   this.user.login(this.account).subscribe((resp) => {\r\n  //     this.navCtrl.push(MainPage);\r\n  //   }, (err) => {\r\n  //     this.navCtrl.push(MainPage);\r\n  //     // Unable to log in\r\n  //     let toast = this.toastCtrl.create({\r\n  //       message: this.loginErrorString,\r\n  //       duration: 3000,\r\n  //       position: 'top'\r\n  //     });\r\n  //     toast.present();\r\n  //   });\r\n  // }\r\n\r\n  loginUser() {\r\n    return this.user.loginCustom(this.userLogin).subscribe(\r\n      userLog => {\r\n        console.log(userLog, 'Login Successful')\r\n        this.navCtrl.push(MainPage);\r\n      }, (err) => {\r\n        this.submitAttempt = true;\r\n\r\n        console.log(err);\r\n        let toast = this.toastCtrl.create({\r\n          message: 'Invalid email or password',\r\n          duration: 2000,\r\n          position: 'top'\r\n        });\r\n        toast.present();\r\n        this.userLogin.email = '';\r\n        this.userLogin.password = '';\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}